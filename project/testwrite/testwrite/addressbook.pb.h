// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: addressbook.proto

#ifndef PROTOBUF_addressbook_2eproto__INCLUDED
#define PROTOBUF_addressbook_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace tutorial {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_addressbook_2eproto();
void protobuf_AssignDesc_addressbook_2eproto();
void protobuf_ShutdownFile_addressbook_2eproto();

class AddressBook;
class Person;
class Person_PhoneNumber;

enum Person_PhoneType {
  Person_PhoneType_MOBILE = 0,
  Person_PhoneType_HOME = 1,
  Person_PhoneType_WORK = 2
};
bool Person_PhoneType_IsValid(int value);
const Person_PhoneType Person_PhoneType_PhoneType_MIN = Person_PhoneType_MOBILE;
const Person_PhoneType Person_PhoneType_PhoneType_MAX = Person_PhoneType_WORK;
const int Person_PhoneType_PhoneType_ARRAYSIZE = Person_PhoneType_PhoneType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Person_PhoneType_descriptor();
inline const ::std::string& Person_PhoneType_Name(Person_PhoneType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Person_PhoneType_descriptor(), value);
}
inline bool Person_PhoneType_Parse(
    const ::std::string& name, Person_PhoneType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Person_PhoneType>(
    Person_PhoneType_descriptor(), name, value);
}
// ===================================================================

class Person_PhoneNumber : public ::google::protobuf::Message {
 public:
  Person_PhoneNumber();
  virtual ~Person_PhoneNumber();

  Person_PhoneNumber(const Person_PhoneNumber& from);

  inline Person_PhoneNumber& operator=(const Person_PhoneNumber& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Person_PhoneNumber& default_instance();

  void Swap(Person_PhoneNumber* other);

  // implements Message ----------------------------------------------

  inline Person_PhoneNumber* New() const { return New(NULL); }

  Person_PhoneNumber* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Person_PhoneNumber& from);
  void MergeFrom(const Person_PhoneNumber& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Person_PhoneNumber* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string number = 1;
  bool has_number() const;
  void clear_number();
  static const int kNumberFieldNumber = 1;
  const ::std::string& number() const;
  void set_number(const ::std::string& value);
  void set_number(const char* value);
  void set_number(const char* value, size_t size);
  ::std::string* mutable_number();
  ::std::string* release_number();
  void set_allocated_number(::std::string* number);

  // optional .tutorial.Person.PhoneType type = 2 [default = HOME];
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::tutorial::Person_PhoneType type() const;
  void set_type(::tutorial::Person_PhoneType value);

  // @@protoc_insertion_point(class_scope:tutorial.Person.PhoneNumber)
 private:
  inline void set_has_number();
  inline void clear_has_number();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr number_;
  int type_;
  friend void  protobuf_AddDesc_addressbook_2eproto();
  friend void protobuf_AssignDesc_addressbook_2eproto();
  friend void protobuf_ShutdownFile_addressbook_2eproto();

  void InitAsDefaultInstance();
  static Person_PhoneNumber* default_instance_;
};
// -------------------------------------------------------------------

class Person : public ::google::protobuf::Message {
 public:
  Person();
  virtual ~Person();

  Person(const Person& from);

  inline Person& operator=(const Person& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Person& default_instance();

  void Swap(Person* other);

  // implements Message ----------------------------------------------

  inline Person* New() const { return New(NULL); }

  Person* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Person& from);
  void MergeFrom(const Person& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Person* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Person_PhoneNumber PhoneNumber;

  typedef Person_PhoneType PhoneType;
  static const PhoneType MOBILE = Person_PhoneType_MOBILE;
  static const PhoneType HOME = Person_PhoneType_HOME;
  static const PhoneType WORK = Person_PhoneType_WORK;
  static inline bool PhoneType_IsValid(int value) {
    return Person_PhoneType_IsValid(value);
  }
  static const PhoneType PhoneType_MIN =
    Person_PhoneType_PhoneType_MIN;
  static const PhoneType PhoneType_MAX =
    Person_PhoneType_PhoneType_MAX;
  static const int PhoneType_ARRAYSIZE =
    Person_PhoneType_PhoneType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  PhoneType_descriptor() {
    return Person_PhoneType_descriptor();
  }
  static inline const ::std::string& PhoneType_Name(PhoneType value) {
    return Person_PhoneType_Name(value);
  }
  static inline bool PhoneType_Parse(const ::std::string& name,
      PhoneType* value) {
    return Person_PhoneType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required int64 id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // optional string email = 3;
  bool has_email() const;
  void clear_email();
  static const int kEmailFieldNumber = 3;
  const ::std::string& email() const;
  void set_email(const ::std::string& value);
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  ::std::string* mutable_email();
  ::std::string* release_email();
  void set_allocated_email(::std::string* email);

  // repeated .tutorial.Person.PhoneNumber phone = 4;
  int phone_size() const;
  void clear_phone();
  static const int kPhoneFieldNumber = 4;
  const ::tutorial::Person_PhoneNumber& phone(int index) const;
  ::tutorial::Person_PhoneNumber* mutable_phone(int index);
  ::tutorial::Person_PhoneNumber* add_phone();
  ::google::protobuf::RepeatedPtrField< ::tutorial::Person_PhoneNumber >*
      mutable_phone();
  const ::google::protobuf::RepeatedPtrField< ::tutorial::Person_PhoneNumber >&
      phone() const;

  // required int32 tint32 = 5;
  bool has_tint32() const;
  void clear_tint32();
  static const int kTint32FieldNumber = 5;
  ::google::protobuf::int32 tint32() const;
  void set_tint32(::google::protobuf::int32 value);

  // required int64 tint64 = 6;
  bool has_tint64() const;
  void clear_tint64();
  static const int kTint64FieldNumber = 6;
  ::google::protobuf::int64 tint64() const;
  void set_tint64(::google::protobuf::int64 value);

  // required uint32 tuint32 = 7;
  bool has_tuint32() const;
  void clear_tuint32();
  static const int kTuint32FieldNumber = 7;
  ::google::protobuf::uint32 tuint32() const;
  void set_tuint32(::google::protobuf::uint32 value);

  // required uint64 tuint64 = 8;
  bool has_tuint64() const;
  void clear_tuint64();
  static const int kTuint64FieldNumber = 8;
  ::google::protobuf::uint64 tuint64() const;
  void set_tuint64(::google::protobuf::uint64 value);

  // required sint32 tsint32 = 9;
  bool has_tsint32() const;
  void clear_tsint32();
  static const int kTsint32FieldNumber = 9;
  ::google::protobuf::int32 tsint32() const;
  void set_tsint32(::google::protobuf::int32 value);

  // required sint64 tsint64 = 10;
  bool has_tsint64() const;
  void clear_tsint64();
  static const int kTsint64FieldNumber = 10;
  ::google::protobuf::int64 tsint64() const;
  void set_tsint64(::google::protobuf::int64 value);

  // required bool tbool = 11;
  bool has_tbool() const;
  void clear_tbool();
  static const int kTboolFieldNumber = 11;
  bool tbool() const;
  void set_tbool(bool value);

  // required fixed64 tfixed64 = 12;
  bool has_tfixed64() const;
  void clear_tfixed64();
  static const int kTfixed64FieldNumber = 12;
  ::google::protobuf::uint64 tfixed64() const;
  void set_tfixed64(::google::protobuf::uint64 value);

  // required sfixed64 tsfixed64 = 13;
  bool has_tsfixed64() const;
  void clear_tsfixed64();
  static const int kTsfixed64FieldNumber = 13;
  ::google::protobuf::int64 tsfixed64() const;
  void set_tsfixed64(::google::protobuf::int64 value);

  // required double tdouble = 14;
  bool has_tdouble() const;
  void clear_tdouble();
  static const int kTdoubleFieldNumber = 14;
  double tdouble() const;
  void set_tdouble(double value);

  // required fixed32 tfixed32 = 15;
  bool has_tfixed32() const;
  void clear_tfixed32();
  static const int kTfixed32FieldNumber = 15;
  ::google::protobuf::uint32 tfixed32() const;
  void set_tfixed32(::google::protobuf::uint32 value);

  // required sfixed32 tsfixed32 = 16;
  bool has_tsfixed32() const;
  void clear_tsfixed32();
  static const int kTsfixed32FieldNumber = 16;
  ::google::protobuf::int32 tsfixed32() const;
  void set_tsfixed32(::google::protobuf::int32 value);

  // required float tfloat = 17;
  bool has_tfloat() const;
  void clear_tfloat();
  static const int kTfloatFieldNumber = 17;
  float tfloat() const;
  void set_tfloat(float value);

  // @@protoc_insertion_point(class_scope:tutorial.Person)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_email();
  inline void clear_has_email();
  inline void set_has_tint32();
  inline void clear_has_tint32();
  inline void set_has_tint64();
  inline void clear_has_tint64();
  inline void set_has_tuint32();
  inline void clear_has_tuint32();
  inline void set_has_tuint64();
  inline void clear_has_tuint64();
  inline void set_has_tsint32();
  inline void clear_has_tsint32();
  inline void set_has_tsint64();
  inline void clear_has_tsint64();
  inline void set_has_tbool();
  inline void clear_has_tbool();
  inline void set_has_tfixed64();
  inline void clear_has_tfixed64();
  inline void set_has_tsfixed64();
  inline void clear_has_tsfixed64();
  inline void set_has_tdouble();
  inline void clear_has_tdouble();
  inline void set_has_tfixed32();
  inline void clear_has_tfixed32();
  inline void set_has_tsfixed32();
  inline void clear_has_tsfixed32();
  inline void set_has_tfloat();
  inline void clear_has_tfloat();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::internal::ArenaStringPtr email_;
  ::google::protobuf::RepeatedPtrField< ::tutorial::Person_PhoneNumber > phone_;
  ::google::protobuf::int64 tint64_;
  ::google::protobuf::int32 tint32_;
  ::google::protobuf::uint32 tuint32_;
  ::google::protobuf::uint64 tuint64_;
  ::google::protobuf::int64 tsint64_;
  ::google::protobuf::int32 tsint32_;
  bool tbool_;
  ::google::protobuf::uint64 tfixed64_;
  ::google::protobuf::int64 tsfixed64_;
  double tdouble_;
  ::google::protobuf::uint32 tfixed32_;
  ::google::protobuf::int32 tsfixed32_;
  float tfloat_;
  friend void  protobuf_AddDesc_addressbook_2eproto();
  friend void protobuf_AssignDesc_addressbook_2eproto();
  friend void protobuf_ShutdownFile_addressbook_2eproto();

  void InitAsDefaultInstance();
  static Person* default_instance_;
};
// -------------------------------------------------------------------

class AddressBook : public ::google::protobuf::Message {
 public:
  AddressBook();
  virtual ~AddressBook();

  AddressBook(const AddressBook& from);

  inline AddressBook& operator=(const AddressBook& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddressBook& default_instance();

  void Swap(AddressBook* other);

  // implements Message ----------------------------------------------

  inline AddressBook* New() const { return New(NULL); }

  AddressBook* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddressBook& from);
  void MergeFrom(const AddressBook& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AddressBook* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .tutorial.Person person = 1;
  int person_size() const;
  void clear_person();
  static const int kPersonFieldNumber = 1;
  const ::tutorial::Person& person(int index) const;
  ::tutorial::Person* mutable_person(int index);
  ::tutorial::Person* add_person();
  ::google::protobuf::RepeatedPtrField< ::tutorial::Person >*
      mutable_person();
  const ::google::protobuf::RepeatedPtrField< ::tutorial::Person >&
      person() const;

  // @@protoc_insertion_point(class_scope:tutorial.AddressBook)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::tutorial::Person > person_;
  friend void  protobuf_AddDesc_addressbook_2eproto();
  friend void protobuf_AssignDesc_addressbook_2eproto();
  friend void protobuf_ShutdownFile_addressbook_2eproto();

  void InitAsDefaultInstance();
  static AddressBook* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Person_PhoneNumber

// required string number = 1;
inline bool Person_PhoneNumber::has_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Person_PhoneNumber::set_has_number() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Person_PhoneNumber::clear_has_number() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Person_PhoneNumber::clear_number() {
  number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_number();
}
inline const ::std::string& Person_PhoneNumber::number() const {
  // @@protoc_insertion_point(field_get:tutorial.Person.PhoneNumber.number)
  return number_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Person_PhoneNumber::set_number(const ::std::string& value) {
  set_has_number();
  number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tutorial.Person.PhoneNumber.number)
}
inline void Person_PhoneNumber::set_number(const char* value) {
  set_has_number();
  number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tutorial.Person.PhoneNumber.number)
}
inline void Person_PhoneNumber::set_number(const char* value, size_t size) {
  set_has_number();
  number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tutorial.Person.PhoneNumber.number)
}
inline ::std::string* Person_PhoneNumber::mutable_number() {
  set_has_number();
  // @@protoc_insertion_point(field_mutable:tutorial.Person.PhoneNumber.number)
  return number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Person_PhoneNumber::release_number() {
  clear_has_number();
  return number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Person_PhoneNumber::set_allocated_number(::std::string* number) {
  if (number != NULL) {
    set_has_number();
  } else {
    clear_has_number();
  }
  number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), number);
  // @@protoc_insertion_point(field_set_allocated:tutorial.Person.PhoneNumber.number)
}

// optional .tutorial.Person.PhoneType type = 2 [default = HOME];
inline bool Person_PhoneNumber::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Person_PhoneNumber::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Person_PhoneNumber::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Person_PhoneNumber::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::tutorial::Person_PhoneType Person_PhoneNumber::type() const {
  // @@protoc_insertion_point(field_get:tutorial.Person.PhoneNumber.type)
  return static_cast< ::tutorial::Person_PhoneType >(type_);
}
inline void Person_PhoneNumber::set_type(::tutorial::Person_PhoneType value) {
  assert(::tutorial::Person_PhoneType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:tutorial.Person.PhoneNumber.type)
}

// -------------------------------------------------------------------

// Person

// required string name = 1;
inline bool Person::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Person::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Person::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Person::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& Person::name() const {
  // @@protoc_insertion_point(field_get:tutorial.Person.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Person::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tutorial.Person.name)
}
inline void Person::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tutorial.Person.name)
}
inline void Person::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tutorial.Person.name)
}
inline ::std::string* Person::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:tutorial.Person.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Person::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Person::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:tutorial.Person.name)
}

// required int64 id = 2;
inline bool Person::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Person::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Person::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Person::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 Person::id() const {
  // @@protoc_insertion_point(field_get:tutorial.Person.id)
  return id_;
}
inline void Person::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:tutorial.Person.id)
}

// optional string email = 3;
inline bool Person::has_email() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Person::set_has_email() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Person::clear_has_email() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Person::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_email();
}
inline const ::std::string& Person::email() const {
  // @@protoc_insertion_point(field_get:tutorial.Person.email)
  return email_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Person::set_email(const ::std::string& value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tutorial.Person.email)
}
inline void Person::set_email(const char* value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tutorial.Person.email)
}
inline void Person::set_email(const char* value, size_t size) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tutorial.Person.email)
}
inline ::std::string* Person::mutable_email() {
  set_has_email();
  // @@protoc_insertion_point(field_mutable:tutorial.Person.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Person::release_email() {
  clear_has_email();
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Person::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    set_has_email();
  } else {
    clear_has_email();
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:tutorial.Person.email)
}

// repeated .tutorial.Person.PhoneNumber phone = 4;
inline int Person::phone_size() const {
  return phone_.size();
}
inline void Person::clear_phone() {
  phone_.Clear();
}
inline const ::tutorial::Person_PhoneNumber& Person::phone(int index) const {
  // @@protoc_insertion_point(field_get:tutorial.Person.phone)
  return phone_.Get(index);
}
inline ::tutorial::Person_PhoneNumber* Person::mutable_phone(int index) {
  // @@protoc_insertion_point(field_mutable:tutorial.Person.phone)
  return phone_.Mutable(index);
}
inline ::tutorial::Person_PhoneNumber* Person::add_phone() {
  // @@protoc_insertion_point(field_add:tutorial.Person.phone)
  return phone_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::tutorial::Person_PhoneNumber >*
Person::mutable_phone() {
  // @@protoc_insertion_point(field_mutable_list:tutorial.Person.phone)
  return &phone_;
}
inline const ::google::protobuf::RepeatedPtrField< ::tutorial::Person_PhoneNumber >&
Person::phone() const {
  // @@protoc_insertion_point(field_list:tutorial.Person.phone)
  return phone_;
}

// required int32 tint32 = 5;
inline bool Person::has_tint32() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Person::set_has_tint32() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Person::clear_has_tint32() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Person::clear_tint32() {
  tint32_ = 0;
  clear_has_tint32();
}
inline ::google::protobuf::int32 Person::tint32() const {
  // @@protoc_insertion_point(field_get:tutorial.Person.tint32)
  return tint32_;
}
inline void Person::set_tint32(::google::protobuf::int32 value) {
  set_has_tint32();
  tint32_ = value;
  // @@protoc_insertion_point(field_set:tutorial.Person.tint32)
}

// required int64 tint64 = 6;
inline bool Person::has_tint64() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Person::set_has_tint64() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Person::clear_has_tint64() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Person::clear_tint64() {
  tint64_ = GOOGLE_LONGLONG(0);
  clear_has_tint64();
}
inline ::google::protobuf::int64 Person::tint64() const {
  // @@protoc_insertion_point(field_get:tutorial.Person.tint64)
  return tint64_;
}
inline void Person::set_tint64(::google::protobuf::int64 value) {
  set_has_tint64();
  tint64_ = value;
  // @@protoc_insertion_point(field_set:tutorial.Person.tint64)
}

// required uint32 tuint32 = 7;
inline bool Person::has_tuint32() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Person::set_has_tuint32() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Person::clear_has_tuint32() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Person::clear_tuint32() {
  tuint32_ = 0u;
  clear_has_tuint32();
}
inline ::google::protobuf::uint32 Person::tuint32() const {
  // @@protoc_insertion_point(field_get:tutorial.Person.tuint32)
  return tuint32_;
}
inline void Person::set_tuint32(::google::protobuf::uint32 value) {
  set_has_tuint32();
  tuint32_ = value;
  // @@protoc_insertion_point(field_set:tutorial.Person.tuint32)
}

// required uint64 tuint64 = 8;
inline bool Person::has_tuint64() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Person::set_has_tuint64() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Person::clear_has_tuint64() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Person::clear_tuint64() {
  tuint64_ = GOOGLE_ULONGLONG(0);
  clear_has_tuint64();
}
inline ::google::protobuf::uint64 Person::tuint64() const {
  // @@protoc_insertion_point(field_get:tutorial.Person.tuint64)
  return tuint64_;
}
inline void Person::set_tuint64(::google::protobuf::uint64 value) {
  set_has_tuint64();
  tuint64_ = value;
  // @@protoc_insertion_point(field_set:tutorial.Person.tuint64)
}

// required sint32 tsint32 = 9;
inline bool Person::has_tsint32() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Person::set_has_tsint32() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Person::clear_has_tsint32() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Person::clear_tsint32() {
  tsint32_ = 0;
  clear_has_tsint32();
}
inline ::google::protobuf::int32 Person::tsint32() const {
  // @@protoc_insertion_point(field_get:tutorial.Person.tsint32)
  return tsint32_;
}
inline void Person::set_tsint32(::google::protobuf::int32 value) {
  set_has_tsint32();
  tsint32_ = value;
  // @@protoc_insertion_point(field_set:tutorial.Person.tsint32)
}

// required sint64 tsint64 = 10;
inline bool Person::has_tsint64() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Person::set_has_tsint64() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Person::clear_has_tsint64() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Person::clear_tsint64() {
  tsint64_ = GOOGLE_LONGLONG(0);
  clear_has_tsint64();
}
inline ::google::protobuf::int64 Person::tsint64() const {
  // @@protoc_insertion_point(field_get:tutorial.Person.tsint64)
  return tsint64_;
}
inline void Person::set_tsint64(::google::protobuf::int64 value) {
  set_has_tsint64();
  tsint64_ = value;
  // @@protoc_insertion_point(field_set:tutorial.Person.tsint64)
}

// required bool tbool = 11;
inline bool Person::has_tbool() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Person::set_has_tbool() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Person::clear_has_tbool() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Person::clear_tbool() {
  tbool_ = false;
  clear_has_tbool();
}
inline bool Person::tbool() const {
  // @@protoc_insertion_point(field_get:tutorial.Person.tbool)
  return tbool_;
}
inline void Person::set_tbool(bool value) {
  set_has_tbool();
  tbool_ = value;
  // @@protoc_insertion_point(field_set:tutorial.Person.tbool)
}

// required fixed64 tfixed64 = 12;
inline bool Person::has_tfixed64() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Person::set_has_tfixed64() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Person::clear_has_tfixed64() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Person::clear_tfixed64() {
  tfixed64_ = GOOGLE_ULONGLONG(0);
  clear_has_tfixed64();
}
inline ::google::protobuf::uint64 Person::tfixed64() const {
  // @@protoc_insertion_point(field_get:tutorial.Person.tfixed64)
  return tfixed64_;
}
inline void Person::set_tfixed64(::google::protobuf::uint64 value) {
  set_has_tfixed64();
  tfixed64_ = value;
  // @@protoc_insertion_point(field_set:tutorial.Person.tfixed64)
}

// required sfixed64 tsfixed64 = 13;
inline bool Person::has_tsfixed64() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Person::set_has_tsfixed64() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Person::clear_has_tsfixed64() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Person::clear_tsfixed64() {
  tsfixed64_ = GOOGLE_LONGLONG(0);
  clear_has_tsfixed64();
}
inline ::google::protobuf::int64 Person::tsfixed64() const {
  // @@protoc_insertion_point(field_get:tutorial.Person.tsfixed64)
  return tsfixed64_;
}
inline void Person::set_tsfixed64(::google::protobuf::int64 value) {
  set_has_tsfixed64();
  tsfixed64_ = value;
  // @@protoc_insertion_point(field_set:tutorial.Person.tsfixed64)
}

// required double tdouble = 14;
inline bool Person::has_tdouble() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Person::set_has_tdouble() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Person::clear_has_tdouble() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Person::clear_tdouble() {
  tdouble_ = 0;
  clear_has_tdouble();
}
inline double Person::tdouble() const {
  // @@protoc_insertion_point(field_get:tutorial.Person.tdouble)
  return tdouble_;
}
inline void Person::set_tdouble(double value) {
  set_has_tdouble();
  tdouble_ = value;
  // @@protoc_insertion_point(field_set:tutorial.Person.tdouble)
}

// required fixed32 tfixed32 = 15;
inline bool Person::has_tfixed32() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Person::set_has_tfixed32() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Person::clear_has_tfixed32() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Person::clear_tfixed32() {
  tfixed32_ = 0u;
  clear_has_tfixed32();
}
inline ::google::protobuf::uint32 Person::tfixed32() const {
  // @@protoc_insertion_point(field_get:tutorial.Person.tfixed32)
  return tfixed32_;
}
inline void Person::set_tfixed32(::google::protobuf::uint32 value) {
  set_has_tfixed32();
  tfixed32_ = value;
  // @@protoc_insertion_point(field_set:tutorial.Person.tfixed32)
}

// required sfixed32 tsfixed32 = 16;
inline bool Person::has_tsfixed32() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Person::set_has_tsfixed32() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Person::clear_has_tsfixed32() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Person::clear_tsfixed32() {
  tsfixed32_ = 0;
  clear_has_tsfixed32();
}
inline ::google::protobuf::int32 Person::tsfixed32() const {
  // @@protoc_insertion_point(field_get:tutorial.Person.tsfixed32)
  return tsfixed32_;
}
inline void Person::set_tsfixed32(::google::protobuf::int32 value) {
  set_has_tsfixed32();
  tsfixed32_ = value;
  // @@protoc_insertion_point(field_set:tutorial.Person.tsfixed32)
}

// required float tfloat = 17;
inline bool Person::has_tfloat() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void Person::set_has_tfloat() {
  _has_bits_[0] |= 0x00010000u;
}
inline void Person::clear_has_tfloat() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void Person::clear_tfloat() {
  tfloat_ = 0;
  clear_has_tfloat();
}
inline float Person::tfloat() const {
  // @@protoc_insertion_point(field_get:tutorial.Person.tfloat)
  return tfloat_;
}
inline void Person::set_tfloat(float value) {
  set_has_tfloat();
  tfloat_ = value;
  // @@protoc_insertion_point(field_set:tutorial.Person.tfloat)
}

// -------------------------------------------------------------------

// AddressBook

// repeated .tutorial.Person person = 1;
inline int AddressBook::person_size() const {
  return person_.size();
}
inline void AddressBook::clear_person() {
  person_.Clear();
}
inline const ::tutorial::Person& AddressBook::person(int index) const {
  // @@protoc_insertion_point(field_get:tutorial.AddressBook.person)
  return person_.Get(index);
}
inline ::tutorial::Person* AddressBook::mutable_person(int index) {
  // @@protoc_insertion_point(field_mutable:tutorial.AddressBook.person)
  return person_.Mutable(index);
}
inline ::tutorial::Person* AddressBook::add_person() {
  // @@protoc_insertion_point(field_add:tutorial.AddressBook.person)
  return person_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::tutorial::Person >*
AddressBook::mutable_person() {
  // @@protoc_insertion_point(field_mutable_list:tutorial.AddressBook.person)
  return &person_;
}
inline const ::google::protobuf::RepeatedPtrField< ::tutorial::Person >&
AddressBook::person() const {
  // @@protoc_insertion_point(field_list:tutorial.AddressBook.person)
  return person_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace tutorial

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::tutorial::Person_PhoneType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::tutorial::Person_PhoneType>() {
  return ::tutorial::Person_PhoneType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_addressbook_2eproto__INCLUDED
